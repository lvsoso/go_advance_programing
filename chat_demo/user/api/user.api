syntax = "v1"

info(
	title: "user api"
	sc: "user system"
	author: "lvoooo"
	email: "wuqize5109@163.com"
)

type RegisterReq {
	// TODO: add members here and delete this comment
	Username string `json:"username"`
	Nickname string `json:"nickname"`
	Gender   string `json:"gender"`
	Mobile   string `json:"mobile"`
	Password string `json:"password"`
}

type LoginReq {
	Username string `json:"username"`
	Password string `json:"password"`
}

type UserReply {
	Id       int64  `json:"id"`
	Username string `json:"username"`
	Nickname string `json:"nickname"`
	Gender   string `json:"gender"`
	Mobile   string `json:"mobile"`
	JwtToken
}

type JwtToken {
	AccessToken  string `json:"accessToken,omitempty"`
	AccessExpire int64  `json:"accessExpire,omitempty"`
	RefreshAfter int64  `json:"refreshAfter,omitempty"`
}

service user-api {
	@handler ping
	post /user/ping ()
	
	@handler register
	post /user/register (RegisterReq)
	
	@handler login
	post /user/login (LoginReq) returns (UserReply)
}

@server(
	jwt: Auth
	middleware: UserCheck
)
service user-api {
	@handler userInfo
	get /user/info () returns (UserReply)
}